<RibbonWindow x:Class="SmartVocabulary.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon"
              xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
              xmlns:system="clr-namespace:System;assembly=mscorlib"
              xmlns:vocableEnum="clr-namespace:SmartVocabulary.Entites"
              xmlns:converter="clr-namespace:SmartVocabulary.Common"
              Icon="pack://application:,,,/Resources/Icons/AppIcon.png"
              Title="Smart Vocabulary"
              ResizeMode="CanResizeWithGrip"
              MinWidth="700"
              MinHeight="300"
              Width="1100"
              Height="595">
    <RibbonWindow.Resources>
        <ObjectDataProvider x:Key="dataFromEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="vocableEnum:VocableKind" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <converter:VocableSearchFilterConverter x:Key="VocableSearchFilterConverter" />
    </RibbonWindow.Resources>

    <Grid>
        <DockPanel>
            <Ribbon DockPanel.Dock="Top"
                    Background="WhiteSmoke">
                <Ribbon.QuickAccessToolBar>
                    <RibbonQuickAccessToolBar Visibility="Collapsed" />
                </Ribbon.QuickAccessToolBar>
                <Ribbon.HelpPaneContent>
                    <RibbonButton SmallImageSource="pack://application:,,,/Resources/Icons/About.png"
                                  Command="{Binding OpenAboutCommand}" />
                </Ribbon.HelpPaneContent>
                <Ribbon.ApplicationMenu>
                    <RibbonApplicationMenu Background="LightGray"
                                           MaxWidth="100">
                        <RibbonApplicationMenuItem Header="Settings"
                                                   Command="{Binding RibbonOpenSettingsCommand}"
                                                   ImageSource="pack://application:,,,/Resources/Icons/Settings.png" />
                        <RibbonApplicationMenuItem Header="About &amp; Help"
                                                   Command="{Binding OpenAboutCommand}"
                                                   ImageSource="pack://application:,,,/Resources/Icons/About.png" />
                        <RibbonApplicationMenuItem Header="Restart"
                                                   Command="{Binding RibbonRestartCommand}"
                                                   ImageSource="pack://application:,,,/Resources/Icons/Restart.png" />
                        <RibbonApplicationMenuItem Header="Exit"
                                                   Command="{Binding RibbonCloseCommand}"
                                                   ImageSource="pack://application:,,,/Resources/Icons/Exit.png" />
                    </RibbonApplicationMenu>
                </Ribbon.ApplicationMenu>
                <RibbonTab Header="HOME">
                    <RibbonGroup Header="BASIC"
                                 IsEnabled="{Binding IsUiEnabled}">
                        <RibbonButton Label="New Entry"
                                      Command="{Binding RibbonAddNewCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Add File.png" />
                        <RibbonButton Label="Edit Selected"
                                      Command="{Binding RibbonEditCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Edit.png" />
                        <RibbonButton Label="Delete Selected"
                                      Command="{Binding RibbonRemoveCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Delete.png" />
                        <RibbonButton Label="Refresh"
                                      Command="{Binding RibbonRefreshCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Restart.png" />
                    </RibbonGroup>
                    <RibbonGroup Header="EXPORT / IMPORT"
                                 Visibility="Collapsed"
                                 IsEnabled="{Binding IsUiEnabled}">
                        <RibbonButton Label="Export"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Export.png"
                                      Command="{Binding ExportCommand}" />
                        <RibbonButton Label="Import"
                                      Command="{Binding ImportCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Import.png" />
                    </RibbonGroup>
                    <RibbonGroup Header="SETTINGS">
                        <RibbonButton Label="Open Settings"
                                      Command="{Binding RibbonOpenSettingsCommand}"
                                      LargeImageSource="pack://application:,,,/Resources/Icons/Settings.png" />
                        <StackPanel>

                            <TextBlock Text="Available Languages" />
                            <ListView Width="150"
                                      Height="45"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      ItemsSource="{Binding AvailableLanguages}"
                                      SelectedItem="{Binding SelectedLanguage}" />
                        </StackPanel>
                    </RibbonGroup>
                </RibbonTab>
            </Ribbon>

            <Expander DockPanel.Dock="Top"
                      IsEnabled="{Binding IsUiEnabled}"
                      Grid.Row="0"
                      Header="Search" 
                      Margin="10,5,10,5">
                <Border BorderBrush="LightGray" BorderThickness="1" Margin="0,5,0,0" CornerRadius="5">
                    <Grid>
                        <xceed:WatermarkTextBox Margin="10,10,40,0"
                                                VerticalAlignment="Top"
                                                Height="25"
                                                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                                Watermark="Search..." />
                        <Button  Height="25"
                                 Width="25"
                                 Command="{Binding ClearSearchFilterCommand}"
                                 VerticalAlignment="Top"
                                 HorizontalAlignment="Right"
                                 Margin="0,10,10,40">
                            <Image Source="pack://application:,,,/Resources/Icons/Delete.png" />
                        </Button>

                        <RadioButton Content="ID"
                                     Margin="10,47,0,18"
                                     IsChecked="{Binding SearchFilter, Converter={StaticResource ResourceKey=VocableSearchFilterConverter}, ConverterParameter=ID}"
                                     HorizontalAlignment="Left" />
                        <RadioButton Content="Native"
                                     Margin="55,47,0,18"
                                     IsChecked="{Binding SearchFilter, Converter={StaticResource ResourceKey=VocableSearchFilterConverter}, ConverterParameter=Native}"
                                     HorizontalAlignment="Left" />
                        <RadioButton Content="Translation"
                                     Margin="120,47,0,18"
                                     IsChecked="{Binding SearchFilter, Converter={StaticResource ResourceKey=VocableSearchFilterConverter}, ConverterParameter=Translation}"
                                     HorizontalAlignment="Left" />
                        <RadioButton Content="Kind"
                                     Margin="208,47,0,18"
                                     IsChecked="{Binding SearchFilter, Converter={StaticResource ResourceKey=VocableSearchFilterConverter}, ConverterParameter=Kind}"
                                     HorizontalAlignment="Left" />
                    </Grid>
                </Border>
            </Expander>

            <DataGrid DockPanel.Dock="Top"
                      IsEnabled="{Binding IsUiEnabled}"
                      Grid.Row="1"
                      CanUserAddRows="True"
                      CanUserDeleteRows="True"
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserSortColumns="True"
                      AutoGenerateColumns="False"
                      SelectionMode="Single"
                      Name="grdVocableGrid"
                      AlternatingRowBackground="{Binding AlternationRowColor}"
                      Margin="10,5,10,35"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      SelectedItem="{Binding SelectedVocable}"
                      AlternationCount="2"
                      ItemsSource="{Binding Vocables}">
                <DataGrid.InputBindings>
                    <KeyBinding Key="Delete"
                                Command="{Binding RemoveCommand}" />
                    <KeyBinding Key="Enter"
                                Command="{Binding EnterCommand}" />
                </DataGrid.InputBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID"
                                        Binding="{Binding ID, UpdateSourceTrigger=PropertyChanged}"
                                        Width="45"
                                        IsReadOnly="True" />
                    <DataGridTextColumn Header="NATIVE"
                                        Binding="{Binding Native, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*" />
                    <DataGridTextColumn Header="TRANSLATION"
                                        Binding="{Binding Translation, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*" />
                    <DataGridTextColumn Header="DEFINITION"
                                        Binding="{Binding Definition, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*"
                                        MinWidth="180" />
                    <DataGridTemplateColumn Header="KIND"
                                            Width="*"
                                            MinWidth="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                                          HorizontalAlignment="Stretch"
                                          SelectedItem="{Binding Kind, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="SYNONYM"
                                        Binding="{Binding Synonym, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*"
                                        MinWidth="180" />
                    <DataGridTextColumn Header="OPPOSITE"
                                        Binding="{Binding Opposite, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*"
                                        MinWidth="180" />
                    <DataGridTextColumn Header="EXAMPLE"
                                        Binding="{Binding Example, UpdateSourceTrigger=PropertyChanged}"
                                        Width="*"
                                        MinWidth="180" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <StatusBar DockPanel.Dock="Bottom"
                   Height="25"
                   VerticalAlignment="Bottom">
            <StatusBarItem Content="Notification: " />
            <StatusBarItem Content="{Binding Notification}" />
        </StatusBar>
    </Grid>
</RibbonWindow>